$breakpoints: (
  pc: 1000px,
  phablet: 560px,
  sp: 320px,
);
$shadowSize: 20px;
$angle: 12deg;
$bgColors: #80e8dd, #7cc2f6, #af81e4, #e784ba, #f9c1a0, #b7f6af;

/* ------------------------------------------------------------
 * リセット
 * ------------------------------------------------------------ */
* {
  padding: 0;
  margin: 0;
}
*,
::before,
::after {
  box-sizing: border-box;
}
html,
body {
  height: 100%;
}
body {
  font-family: 'Noto Sans JP', sans-serif;
  line-height: 1.6;
}
img {
  max-width: 100%;
  height: auto;
}

/* ------------------------------------------------------------
 * レイアウト
 * ------------------------------------------------------------ */
.title {
  font-size: 3rem;
  text-align: center;
}
.sections {
  display: flex;
  margin-top: 50px;
  transform: skewY($angle);
  &:first-of-type {
    margin-top: 100px;
  }
}
.sections_item {
  position: relative;
  height: 100%;
  color: #fff;
  background-color: #f2f2f2;
  &::before {
    position: absolute;
    top: -$shadowSize;
    left: -$shadowSize;
    width: 100%;
    height: 100%;
    content: '';
  }
}
.sections_inner {
  width: map-get($breakpoints, pc) / 2;
  transform: skewY(-$angle);
}
.sections_heading {
  font-size: 2rem;
  font-weight: 700;
}
.sections_text {
  margin-top: .5rem;
}
.sections_pic {
  margin-top: 60px;
  overflow: hidden;
  transform: skewY($angle);
  img {
    transform: skewY(-$angle) scale(1.4);
  }
}

// 左と右の設定
.sections_item {
  &:first-of-type {
    // width: calc(50% + (#{$shadowSize} / 2));
    width: calc(50% - #{$shadowSize});
    margin-left: $shadowSize;
    .sections_inner {
      padding-right: 50px + $shadowSize;
      padding-bottom: 50px;
      margin-left: auto;
    }
  }
  &:last-of-type {
    width: calc(50% + #{$shadowSize});
    margin-top: $shadowSize * 2;
    &::before {
      width: calc(100% + #{$shadowSize});
    }
    .sections_inner {
      padding-bottom: 40px;
      padding-left: 50px - $shadowSize;
      margin-right: auto;
    }
  }
}

// 背景色の設定
.sections {
  @for $i from 1 through 3 {
    &:nth-of-type(#{$i}) {
      .sections_item {
        $oddColor: nth($bgColors, ($i * 2) - 1);
        $evenColor: nth($bgColors, $i * 2);
        &:first-of-type {
          background-color: lighten($oddColor, 12%);
          &::before {
            background-color: $oddColor;
          }
        }
        &:last-of-type {
          background-color: lighten($evenColor, 12%);
          &::before {
            background-color: $evenColor;
          }
        }
      }
    }
  }
}
@media (max-width: map-get($breakpoints, pc)) {
  .sections_inner {
    width: 100%;
    transform: skewY(-$angle);
  }
  .sections_item {
    &:first-of-type {
      .sections_inner {
        padding-right: $shadowSize * 2;
      }
    }
    &:last-of-type {
      margin-top: $shadowSize * 2;
      .sections_inner {
        padding-right: $shadowSize;
        padding-left: $shadowSize / 2;
      }
    }
  }
}
@media (max-width: map-get($breakpoints, phablet)) {
  .title {
    font-size: 10vw;
  }
  .sections {
    display: block;
    &:first-of-type {
      margin-top: 20vw;
    }
  }
  .sections_item {
    &:first-of-type {
      width: calc(100% - #{$shadowSize});
      margin-left: $shadowSize;
      &::before {
        width: calc(100% + #{$shadowSize});
      }
      .sections_inner {
        padding-right: $shadowSize;
      }
    }
    &:last-of-type {
      width: calc(100% - #{$shadowSize});
      margin-left: $shadowSize;
      .sections_inner {
        padding-left: 0;
        padding-bottom: 50px;
      }
    }
  }
}