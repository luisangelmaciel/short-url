const rootElement = document.getElementById('root');

class NameForm extends React.Component {
  constructor(props) {
    super(props);
  }
  
  state = {
    error: this.props.getErrorMessage('')
  }
  
  handleSubmit = event => {
    event.preventDefault();
    const value = event.target.elements.username.value;
    const error = this.props.getErrorMessage(value);
    if (error) {
      alert(`error: ${error}`)
    } else {
      alert(`success: ${value}`)
    }
  }
  
  handleChange = event => {
    const {value} = event.target;
    this.setState({
      error: this.props.getErrorMessage(value)
    })
  }
  
  render() {
    const {error} = this.state
    return (
      <form onSubmit={this.handleSubmit}>
        <label>
          <span>Name:</span>
          <input name="username" onChange={this.handleChange} />
        </label>
        {error ? <div style={{color: 'red'}}>{error}</div> : null}
        <button disabled={Boolean(error)}>Submit</button>
      </form>
    )
  }
}

const element = (
  <NameForm getErrorMessage={value => {
    if (value.length < 3) {
      return `Value must be at least 3 characters but it is only ${value.length}`
    }
    if (!value.includes('s')) {
      return `Value does not include "s" but it should`
    }
    return null
  }} />
)

ReactDOM.render( 
  element,
  document.getElementById('root')
)
