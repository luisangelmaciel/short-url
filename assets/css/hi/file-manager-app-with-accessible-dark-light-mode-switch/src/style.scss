$w: 26em;

$ctrl-dm: .875em;

$tile-sp: 1em;
$icon-dl: 5em;

$sec-bg: #171721 #f1f5fe;
$ini-bg: #2c2c34 #fcfcfc;
$ini-fg: #fefefe #262626;
$sec-fg: #9d9d9d;

$meter0: #1fbfa8 #41aa1a;
$meter1: #0c1d1b #f8fdf6;

$radius: .75em;
$offset: .5em;

@function mixx($c, $k, $j) {
	$c0: nth($c, 1);
	$c1: nth($c, 2);
	$r0: red($c0);
	$g0: green($c0);
	$b0: blue($c0);
	$r1: red($c1);
	$g1: green($c1);
	$b1: blue($c1);
	
	@return rgb(calc(#{$j}*#{$r0} + #{$k}*#{$r1}), 
							calc(#{$j}*#{$g0} + #{$k}*#{$g1}), 
							calc(#{$j}*#{$b0} + #{$k}*#{$b1}))
}

* {
	box-sizing: inherit;
	margin: 0;
	border: none;
	padding: 0;
	list-style: none;
	background: transparent;
	color: inherit;
	font:inherit
}

.ini--bg { background: mixx($ini-bg, var(--mode), var(--not-mode)) }

.sec--bg { background: mixx($sec-bg, var(--mode), var(--not-mode)) }

.ini--fg { color: mixx($ini-fg, var(--mode), var(--not-mode)) }

.sec--fg { color: $sec-fg }

nav { position: relative }

button {
	padding: .375em;
	width: $ctrl-dm; height: $ctrl-dm;
	border-radius: 50%;
	
	&:focus {
		outline: none;
		box-shadow: inset 0 0 0 2px
	}
}

[aria-haspopup] {
	overflow: hidden;
	background: 
		radial-gradient(circle, currentcolor 38%, transparent calc(38% + 1px)) 
			50%/ 26% 26% no-repeat space content-box;
	text-indent: 100vmax;
	white-space: nowrap;
	cursor: pointer
}

.popup {
	--exp: 0;
	--not-exp: calc(1 - var(--exp));
	position: absolute;
	top: 100%; right: 0;
	padding: .25em;
	min-width: .35*$w;
	border-radius: 5px;
	transform-origin: 100% 0;
	transform: perspective(5em) 
		rotatex(calc(var(--not-exp)*-90deg)) scale(var(--exp));
	box-shadow: 0 0 5px hsla(0, 0%, 0%, .5);
	transition: transform .3s;
	
	[aria-expanded='true'] + & { --exp: 1 }
}

.dummy {
	font-family: purisa, segoe script, comic sans ms, cursive;
	text-align: center
}

[type='radio'] {
	position: absolute;
	opacity: 0;
	clip-path: inset(50%)
}

meter {
	-moz-appearance: none;
	width: 100%; height: .5em;
	border-radius: .5em;
	--c0: #{mixx($meter0, var(--mode), var(--not-mode))};
	--c1: #{mixx($meter1, var(--mode), var(--not-mode))};
	
	&::-webkit-meter-bar {
		border: none;
		height: .375em;
		background: transparent
	}
	
	&::-webkit-meter-optimum-value {
		border-radius: .375em;
		background: linear-gradient(90deg, var(--c0) 85%, var(--c1))
	}
	
	&::-moz-meter-bar {
		height: .375em;
		border-radius: .375em;
		background: linear-gradient(90deg, var(--c0) 85%, var(--c1))
	}
}

body {
	--not-mode: calc(1 - var(--mode));
	display: grid;
	place-content: center;
	min-height: 100vh;
	font: 1em/ 1.5 roboto, sans-serif
}

#app {
	display: grid;
	overflow: hidden;
	border-radius: 2*$tile-sp;
	width: $w
}

.view {
	grid-area: 1/ 1;
	
	&--favs { transform: translate(100%) }
	
	> header {
		z-index: 2;
		padding: $tile-sp;
		
		nav {
			display: grid;
			grid-template: max-content/ repeat(2, max-content);
			justify-content: space-between
		}
		
		button {
			color: #fff;
			filter: Invert(var(--mode))
		}
	}
}

.main { z-index: 1 }

.wrap {
	display: grid;
	padding: $tile-sp;
	
	&--mode {
		overflow: hidden;
		padding: 0;
		
		label {
			grid-area: 1/ 1;
			padding: .25em;
			transform: translate(calc((1 - var(--idx) - var(--mode))*100%));
			transition: transform .3s;
			cursor: pointer
		}
	}
	
	&--types {
		grid-gap: $tile-sp;
		
		.view--main & {
			grid-template-columns: 1fr 1fr
		}
		
		.view--favs & {
			grid-auto-flow: column
		}
	}
}

.slide {
	--ll: #{mixx(#49494b #e6e6e6, var(--mode), var(--not-mode))};
	--hl: #{mixx($ini-bg, var(--mode), var(--not-mode))};
	display: grid;
	grid-gap: .75em 0;
	grid-template-columns: 1fr 1fr;
	grid-area: 1/ 1;
	padding: .5*$tile-sp;
	border-radius: $tile-sp;
	
	> :not(.chart) {
		--size: calc(2*(#{$radius} + 2px));
		display: grid;
		background-size: var(--size) var(--size);
		
		&::before, &::after { grid-column: 2 }
		
		&::before {
			color: $sec-fg;
			text-transform: capitalize;
			content: attr(class) ' space'
		}
		
		&::after {
			font-size: 1.75em;
			font-weight: 900;
			content: counter(val) 'GB'
		}
	}
}

.chart {
	grid-column: 1/ -1;
	place-self: center;
	overflow: hidden;
	position: relative;
	padding: 27.5%;
	border-radius: 50%;
	box-shadow: inset 0 0 1px 2em var(--ll);
	
	&::before, &::after, .arc {		
		position: absolute;
		right: 0; left: 0;
		line-height: 1.125;
		text-align: center
	}
	
	&::before {
		bottom: 50%;
		font-size: 2.125em;
		font-weight: 700;
		counter-reset: perc var(--perc);
		content: counter(perc) '%'
	}
	
	&::after { content: 'Used' }
}

.arc {
	--a: calc(var(--rel)*360deg);
	display: grid;
	top: 0; bottom: 0;
	transform: rotate(calc((var(--cum) - var(--rel))*360deg));
	background: 
		conic-gradient(var(--col) var(--a), transparent 0%);
	--mask: 
		radial-gradient(closest-side, 
				transparent calc(100% - 2em - 1px), red calc(100% - 2em));
	-webkit-mask: var(--mask);
					mask: var(--mask);
	
	&::before, &::after {
		grid-area: 1/ 1;
		border-radius: 50%;
		background: 
			radial-gradient(circle at 50% 1em, 
					var(--col) 1em, transparent calc(1em + 1px));
		content: ''
	}
	
	&::after { transform: rotate(var(--a)) }
}

.total {
	grid-template-columns: 2*($radius + $offset) 1fr;
	background: 
		radial-gradient(circle, 
				var(--ll) calc(#{$radius} - 1px), transparent $radius) 
			left $offset bottom $offset no-repeat;
	counter-reset: val var(--ssum)
}

.used {
	grid-template-columns: 5*$radius + 2*$offset 1fr;
	background: 
		radial-gradient(circle, 
				var(--col3) calc(#{$radius} - 1px), 
				var(--hl) $radius calc(#{$radius} + 1px), 
				transparent calc(#{$radius} + 2px)) 
			left $offset bottom $offset, 
		radial-gradient(circle, 
				var(--col2) calc(#{$radius} - 1px), 
				var(--hl) $radius calc(#{$radius} + 1px), 
				transparent calc(#{$radius} + 2px)) 
			left $offset + $radius bottom $offset, 
		radial-gradient(circle, 
				var(--col1) calc(#{$radius} - 1px), 
				var(--hl) $radius calc(#{$radius} + 1px), 
				transparent calc(#{$radius} + 2px)) 
			left $offset + 2*$radius bottom $offset, 
		radial-gradient(circle, 
				var(--col0) calc(#{$radius} - 1px), 
				var(--hl) $radius calc(#{$radius} + 1px), 
				transparent calc(#{$radius} + 2px)) 
			left $offset + 3*$radius bottom $offset;
	background-repeat: no-repeat;
	counter-reset: val var(--used)
}

.tile {
	padding: .5*$tile-sp;
	border-radius: $tile-sp;
	background: mixx($ini-bg, var(--mode), var(--not-mode));
	
	header {
		display: grid;
		grid-template-columns: 1fr max-content;
		z-index: 2
	}
	
	h3 {
		font-size: 1.375em;
		font-weight: 500;
		text-transform: capitalize
	}
	
	nav {
		place-self: start;
		grid-area: 1/ 2
	}
}

.ico {
	margin: -.5*$tile-sp;
	width: $icon-dl; height: $icon-dl;
	color: var(--col)
}

.info {
	&__num {
		padding-bottom: .5em;
		
		&::after { content: ' Files' }
	}
	
	&__rel {
		font-weight: 500;
		
		&::after { content: '%' }
	}
}